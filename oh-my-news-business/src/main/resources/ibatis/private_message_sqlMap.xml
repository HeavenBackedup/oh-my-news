<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="private_message_sqlMap">
    <resultMap id="private_message_map" class="com.oh.my.news.model.dto.PrivateMessage">
        <result property="id" column="id" jdbcType="INTEGER"></result>
        <result property="sourceUsername" column="username" jdbcType="STRING"></result>
        <result property="imageUrl" column="url" jdbcType="STRING"></result>
        <result property="content" column="content" jdbcType="STRING"></result>
        <result property="date" column="date" jdbcType="TIMESTAMP"></result>
    </resultMap>
    <resultMap id="private_msg_snaoshot_map" class="com.oh.my.news.model.po.PrivateMsgSnapshot">
        <result property="id" column="id" jdbcType="INTEGER"></result>
        <result property="targetId" column="target_id" jdbcType="INTEGER"></result>
        <result property="date" column="date" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <select id="queryList_private_message_by_id" resultMap="private_message_map">
        select `private_message`.id, `user`.username username, `media`.url url, `private_message`.content, `private_message`.date from `private_message`,`user`,`media` where `private_message`.source_user_id=`user`.id and `private_message`.source_user_id=#sourceUserId# and  `private_message`.target_user_id=#targetUserId# and `media`.id=`private_message`.source_user_id;
    </select>
    <select id="queryObject_private_message_by_id" resultClass="List" >
        select `private_message`.target_user_id ,`user`.username username from `private_message`,`user` where `private_message`.source_user_id=#id# and `private_message`.target_user_id=`user`.id;
    </select>
    <select id="query_target_ids_by_user_id" resultMap="private_msg_snaoshot_map" parameterClass="java.util.Map">
       select pmt.id id,pmt.target_user_id target_id,pmt.`date` from private_message as pmt WHERE pmt.is_delete = 0 and pmt.source_user_id = #userId#
           <isNotNull property="type" >
               and pmt.`is_read` = #type#;
           </isNotNull>


    </select>
    <select id="query_source_ids_by_user_id" resultMap="private_msg_snaoshot_map" parameterClass="java.util.Map">
       select pmt.id id,pmt.source_user_id target_id,pmt.`date` from private_message as pmt WHERE pmt.is_delete = 0 and pmt.target_user_id = #userId#
        <isNotNull property="type" >
            and pmt.`is_read` = #type#
        </isNotNull>
        ORDER BY pmt.`date` desc;
    </select>
    <select id="query_source_private_message_by_ids" resultMap="private_message_map" parameterClass="java.util.List">
        select `private_message`.source_user_id id, `user`.username username, `media`.url url, `private_message`.content, `private_message`.`date` FROM `private_message`,`user`,`media` WHERE `private_message`.source_user_id = `user`.id and `user`.media_id = `media`.id
         <iterate open="and `private_message`.id in (" close=")" conjunction=",">
             #ids[]#
         </iterate>

        and `private_message`.is_delete = 0;
    </select>
    <select id="query_target_private_message_by_ids" resultMap="private_message_map" parameterClass="java.util.List">
         select `private_message`.id, `user`.username username, `media`.url url, `private_message`.content, `private_message`.`date` FROM `private_message`,`user`,`media` WHERE `private_message`.target_user_id = `user`.id and `user`.media_id = `media`.id
        <iterate open="and `private_message`.id in (" close=")" conjunction=",">
            #ids[]#
        </iterate>
        and `private_message`.is_delete = 0;
    </select>

    <select id="query_source_private_message_by_source_id_and_target_id" resultMap="private_message_map" parameterClass="java.util.Map">
        select `private_message`.id, `user`.username username, `media`.url url, `private_message`.content, `private_message`.`date` FROM `private_message`,`user`,`media` WHERE `private_message`.source_user_id = #sourceId# and  `private_message`.target_user_id = #targetId# and `private_message`.source_user_id = `user`.id and `user`.media_id = `media`.id and `private_message`.is_delete = 0 ORDER by `private_message`.`date` desc;
    </select>
    <select id="query_target_private_message_by_target_id_and_target_id" resultMap="private_message_map" parameterClass="java.util.Map">
        select `private_message`.id, `user`.username username, `media`.url url, `private_message`.content, `private_message`.`date` FROM `private_message`,`user`,`media` WHERE `private_message`.source_user_id = #sourceId# and  `private_message`.target_user_id = #targetId# and `private_message`.target_user_id = `user`.id and `user`.media_id = `media`.id and `private_message`.is_delete = 0 ORDER by `private_message`.`date` desc;
    </select>

    <insert id="insert_private_message" parameterClass="com.oh.my.news.model.po.PrivateMessagePo">
        insert into `private_message`(is_delete,source_user_id,target_user_id,content,`date`,is_read) values(0,#sourceUserId#,#targetUserId#,#content#,now(),0);
        <selectKey resultClass="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>

    <!--<select id="query_source_id_target_id_by_id"></select>-->





</sqlMap>
